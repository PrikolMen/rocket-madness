COLLISION_GROUP_INTERACTIVE_DEBRIS = COLLISION_GROUP_INTERACTIVE_DEBRIS
physenv_GetGravity = physenv.GetGravity
timer_Simple = timer.Simple
math_max = math.max
CurTime = CurTime

AddonName = "Rocket Madness"
Flags = bit.bor( FCVAR_ARCHIVE, FCVAR_NOTIFY )
ReloadTime = CreateConVar( "mp_rpg_reload_time", "0.25", Flags, "Time to launch the next RPG rocket.", 0, 300 )
OriginalCollisions = CreateConVar( "mp_rpg_missile_original_collisions", "0", Flags, "Use the original collision group, which means the missiles will collide with each other!", 0, 1 )
Offset = Vector( 0, 0, 3 )

hook.Add "OnEntityCreated", AddonName, =>
    switch @GetClass!
        when "item_rpg_round"
            if math.random( 1, 10 ) ~= 2
                return

            timer_Simple math.Rand( 0, 3 ), ->
                unless @IsValid!
                    return

                rocket = ents.Create( "rpg_missile" )
                rocket\SetPos( @LocalToWorld( Offset ) )
                rocket\SetAngles( @GetAngles! + Angle( math.random( -30, -180 ), math.random( -180, 180 ), math.random( -30, -180 ) ) )
                rocket\Spawn!

                rocket\SetVelocity( -physenv_GetGravity! / 2 )

                @Remove!
        when "rpg_missile"
            timer_Simple 0, ->
                unless @IsValid!
                    return

                owner = @GetOwner!
                unless owner\IsValid! and owner\IsPlayer! and owner\Alive!
                    return

                unless OriginalCollisions\GetBool!
                    @SetCollisionGroup( COLLISION_GROUP_INTERACTIVE_DEBRIS )

                weapon = owner\GetWeapon( "weapon_rpg" )
                unless weapon\IsValid!
                    return

                clip1 = math_max( weapon\Clip1!, owner\GetAmmoCount( weapon\GetPrimaryAmmoType! ) )
                if clip1 < 0
                    return

                owner\StripWeapon( "weapon_rpg" )

                weapon = owner\Give( "weapon_rpg", true )
                weapon\SetNextPrimaryFire( CurTime! + ReloadTime\GetFloat! )
                weapon\SetDeploySpeed( 16 )
                weapon\SetClip1( clip1 )

                owner\SelectWeapon( "weapon_rpg" )

hook.Add "PlayerAmmoChanged", AddonName, ( ammoID, _, new ) =>
    weapon = @GetActiveWeapon!
    if weapon\IsValid! and weapon\GetClass! == "weapon_rpg" and weapon\GetPrimaryAmmoType! == ammoID
        weapon\SetClip1( new )
